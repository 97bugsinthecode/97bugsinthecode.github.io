{
    "version": "https://jsonfeed.org/version/1",
    "title": "97 Bugs In The Code",
    "description": "",
    "home_page_url": "https://97bugsinthecode.github.io",
    "feed_url": "https://97bugsinthecode.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "97bugsinthecode"
    },
    "items": [
        {
            "id": "https://97bugsinthecode.github.io/test.html",
            "url": "https://97bugsinthecode.github.io/test.html",
            "title": "тест",
            "summary": "Тип Тип\tназва типу (клас) Приклад Ціле число int 0, 999, -100500, 15 Дробове число float 3.14, -22.99, 15.0, 0.001 Комплексне число complex 10.5j, 12.0j, -9.-9.99j, 0.-1j Булевий (логічний) bool True, False Рядковий (текст) str “Іван”, “3.14”, “”, “Т. Шевченко”",
            "content_html": "<table>\n<thead>\n<tr>\n<th><strong>Тип</strong></th>\n<th><strong>Тип\tназва типу (клас)</strong></th>\n<th><strong>Приклад</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ціле число</td>\n<td>int</td>\n<td>0, 999, -100500, 15</td>\n</tr>\n<tr>\n<td>Дробове число</td>\n<td>float</td>\n<td>3.14, -22.99, 15.0, 0.001</td>\n</tr>\n<tr>\n<td>Комплексне число</td>\n<td>complex</td>\n<td>10.5j, 12.0j, -9.-9.99j, 0.-1j</td>\n</tr>\n<tr>\n<td>Булевий (логічний)</td>\n<td>bool</td>\n<td>True, False</td>\n</tr>\n<tr>\n<td>Рядковий (текст)</td>\n<td>str</td>\n<td>“Іван”, “3.14”, “”, “Т. Шевченко”</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n",
            "author": {
                "name": "97bugsinthecode"
            },
            "tags": [
            ],
            "date_published": "2023-10-22T19:22:26+03:00",
            "date_modified": "2023-10-22T19:24:54+03:00"
        },
        {
            "id": "https://97bugsinthecode.github.io/hello-world.html",
            "url": "https://97bugsinthecode.github.io/hello-world.html",
            "title": "10 клас. 1. Типи даних у Python",
            "summary": "<p>Ця стаття дає початок серії уроків для 10 класу профільної програми з інформатики. У неї ми познайомимося з поняттями даних, типів даних, та розглянемо, які типи даних має мова програмування Python.</p>\n",
            "content_html": "<p>Ця стаття дає початок серії уроків для 10 класу профільної програми з інформатики. У неї ми познайомимося з поняттями даних, типів даних, та розглянемо, які типи даних має мова програмування Python.</p>\n\n<p>Дані у програмуванні - фундаментальне поняття. Люди створюють комп'ютерні програми саме з метою опрацювання даних. З попередніх класів знаєте, що дані в  комп'ютерних системах - це інформація, що подана у вигляді двійкового коду. Таку форму подання інформації вимагає від людини комп'ютер, адже його архітектура дозволяє опрацьовувати лише нулі та одиниці, і саме така форма подання інформації є дуже незручною для розуміння самою людиною: ми звикли до світу, сповненому інформації у вигляді звуків, образів та символів... Окрім того, коли справа доходить до чисел і проведення операцій над ними - людина вже декілька тисячоліть оперує десятковою системою числення, до якої, звісно, дуже звикла.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://97bugsinthecode.github.io/media/posts/1/python_10_information.jpg\" alt=\"Інформація\" width=\"1280\" height=\"720\" sizes=\"100vw\" srcset=\"https://97bugsinthecode.github.io/media/posts/1/responsive/python_10_information-xs.jpg 300w ,https://97bugsinthecode.github.io/media/posts/1/responsive/python_10_information-sm.jpg 480w ,https://97bugsinthecode.github.io/media/posts/1/responsive/python_10_information-md.jpg 768w ,https://97bugsinthecode.github.io/media/posts/1/responsive/python_10_information-lg.jpg 1024w ,https://97bugsinthecode.github.io/media/posts/1/responsive/python_10_information-xl.jpg 1360w ,https://97bugsinthecode.github.io/media/posts/1/responsive/python_10_information-2xl.jpg 1600w\"></figure>\n<p>Комп'ютер - це лише виконавець, який не зрушить з місця, якщо не отримає список інструкцій для виконання. Інструкції, звісно, також повинні бути записані у вигляді, зрозумілому саме комп'ютеру - тобто, у двійковому коді. Виникає конфлікт інтересів: комп'ютер вміє працювати дуже швидко, але для належної роботи у нього занадто специфічні інформаційні вимоги, а людина призвичаїлася до світу, в якому подібних форм інформації ніколи не існувало.</p>\n<p>Тому для ефективной співпраці між людиною та інформаційною системою існують певні домовленності, які дозволяють компю'теру розуміти інформацію зі світу людей та інструкції з її опрацювання за умови, якщо людина буде чітко дотримуватися певних правил написання таких інструкцій та створення інформації. Згідно цих домовленностей, людина змушена дещо відійти від зручних для неї способів роботи з інформацією, і те ж саме змушений зробити комп'ютер - обидві сторони мають зійтися десь посередині.</p>\n<p><strong>Збірник правил написання таких інструкцій</strong> зі сторони людини називають <strong>мовою програмування</strong>, а <strong>форми подання інформації</strong> для її опрацювання комп'ютером - <strong>типами даних</strong>.</p>\n<p>Типи даних у мовах програмування - це зазвичай <strong>числова </strong>або <strong>текстова </strong>інформація. Таку інформацію легко перекласти на двійковий код, і вона також є  цілком зрозумілою для людини. Існують й інші типи, які також дуже добре розуміють обидві сторони.</p>\n<p>Мова програмування Python має наступні <strong>базові типи даних</strong>:</p>\n<pre class=\"language-python line-numbers\"><code>for i in range(10):\n    print(i)</code></pre>\n<p> </p>",
            "image": "https://97bugsinthecode.github.io/media/posts/1/python_10_datatypes-2.jpg",
            "author": {
                "name": "97bugsinthecode"
            },
            "tags": [
            ],
            "date_published": "2023-10-22T14:24:47+03:00",
            "date_modified": "2023-10-28T14:54:10+03:00"
        }
    ]
}
